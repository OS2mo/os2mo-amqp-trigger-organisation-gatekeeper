# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0
[tool.poetry]
name = "orggatekeeper"
version = "2.7.0"
description = "OS2mo AMQP Trigger receiver that updates line management information"
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"
readme = "README.md"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/os2mo-triggers/os2mo-amqp-trigger-organisation-gatekeeper"
keywords = ["os2mo", "amqp"]

[tool.poetry.dependencies]
python = "^3.11"
gql = "^3.5.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
fastapi = "^0.115.11"
fastramqpi = "^10.1.6"
ramodels = "^39.6.2"

[tool.poetry.group.test.dependencies]
pytest = "^8"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
pytest-split = "^0.8.0"
asgi-lifespan = "^2.1.0"


[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3.2.1"
ruff = "^0.9.7"
mypy = "^1.4.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
check_untyped_defs = "True"
disallow_untyped_defs = "True"
plugins = "pydantic.mypy"


[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I"
]

[tool.ruff.lint.isort]
force-single-line = true
